@model FacturacionSAT.CSL.WEB.Models.ViewModel.FacturacionViewModel
@{
    ViewBag.Title = "Nueva factura";
    SelectList ListaUsoCFDI = new SelectList(ViewBag.ListaUsoCFDI, "Id", "Value");

    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section css{
    <link href="~/Content/themes/smoothness/jquery.ui.all.css" rel="stylesheet" />
    <style>
        .form-control[disabled],
        .form-control[readonly] {
            color: #000 !important;
        }
    </style>
}

@section featured
{

    @{
        var message = TempData["message"] ?? string.Empty;
        var typemessage = TempData["typemessage"] ?? string.Empty;
    }

    <div id="Error" class="progress-bar progress-bar-striped active errorCSL" style="display:none; width:100%">
        <h3></h3>
    </div>
    <div id="Success" class="progress-bar progress-bar-striped active successCSL" style="display:none; width:100%">
        <h3></h3>
    </div>

    <div class="col-md-12">
        <form action="@Url.Content("~/Admin/AdminFactura/Add")" method="post" autocomplete="off">
            @Html.HiddenFor(d => d.Version)
            @Html.HiddenFor(d => d.TipoComprobante)
            @Html.HiddenFor(d => d.MonedaDB)
            @Html.HiddenFor(d => d.Version)
            @Html.HiddenFor(d => d.Subtotal)
            @Html.HiddenFor(d => d.TotalDescuento)
            @Html.HiddenFor(d => d.Total)
            @Html.HiddenFor(d => d.LugarExpedicion)
            @Html.HiddenFor(d => d.CodigoBarraBoleto)

            @for (int i = 0; i < Model.Conceptos.Count; i++)
            {
                @Html.HiddenFor(d => d.Conceptos[i].Cantidad)
                @Html.HiddenFor(d => d.Conceptos[i].ClaveProducto)
                @Html.HiddenFor(d => d.Conceptos[i].ClaveProductoDB)
                @Html.HiddenFor(d => d.Conceptos[i].ClaveUnidad)
                @Html.HiddenFor(d => d.Conceptos[i].ClaveUnidadDB)
                @Html.HiddenFor(d => d.Conceptos[i].CuentaPredial)
                @Html.HiddenFor(d => d.Conceptos[i].Descripcion)
                @Html.HiddenFor(d => d.Conceptos[i].Descuento)
                @Html.HiddenFor(d => d.Conceptos[i].PrecioUnitario)
                @Html.HiddenFor(d => d.Conceptos[i].Unidad)

                for (int x = 0; x < Model.Conceptos[i].Impuestos.Count; x++)
                {
                    @Html.HiddenFor(d => d.Conceptos[i].Impuestos[x].Ambito)
                    @Html.HiddenFor(d => d.Conceptos[i].Impuestos[x].Factor)
                    @Html.HiddenFor(d => d.Conceptos[i].Impuestos[x].Importe)
                    @Html.HiddenFor(d => d.Conceptos[i].Impuestos[x].Nombre)
                    @Html.HiddenFor(d => d.Conceptos[i].Impuestos[x].Tasa)
                    @Html.HiddenFor(d => d.Conceptos[i].Impuestos[x].Tipo)
                }
            }


            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(d => d.Folio)
                    @Html.TextBoxFor(d => d.Folio, "", new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessage("Folio", new { @class = "text-danger" })

                    @Html.LabelFor(d => d.TipoComprobante)
                    @Html.TextBoxFor(d => d.sTipoComprobante, "", new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessage("TipoComprobante", new { @class = "text-danger" })

                    @Html.LabelFor(d => d.UsoCFDI)
                    @Html.DropDownListFor(d => d.UsoCFDI, ListaUsoCFDI, new { @class = "form-control" })
                    @Html.ValidationMessage("UsoCFDI", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(d => d.FormaDePago)
                    @Html.TextBoxFor(d => d.FormaDePago, "", new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessage("FormaDePago", new { @class = "text-danger" })

                    @Html.LabelFor(d => d.Fecha)
                    @Html.TextBoxFor(d => d.Fecha, "{0:yyyy/MM/dd HH:mm:ss}", new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessage("Fecha", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(d => d.Moneda)
                    @Html.TextBoxFor(d => d.Moneda, "", new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessage("Moneda", new { @class = "text-danger" })

                    @Html.LabelFor(d => d.RegimenFiscal)
                    @Html.TextBoxFor(d => d.RegimenFiscal, "", new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessage("RegimenFiscal", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <hr />
            <h5>Datos del cliente</h5>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(d => d.RFCReceptor)
                    @Html.TextBoxFor(d => d.RFCReceptor, "", new { @class = "form-control", @readonly = "true" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(d => d.RazonSocial)
                    @if (string.IsNullOrEmpty(Model.RazonSocial))
                    {
                        @Html.TextBoxFor(d => d.RazonSocial, "", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.TextBoxFor(d => d.RazonSocial, "", new { @class = "form-control", @readonly = "true" })
                    }
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(d => d.EmailReceptor)
                    @if (string.IsNullOrEmpty(Model.EmailReceptor))
                    {
                        @Html.TextBoxFor(d => d.EmailReceptor, "", new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.TextBoxFor(d => d.EmailReceptor, "", new { @class = "form-control", @readonly = "true" })
                    }
                </div>
            </div>
            <br />
            <hr />
            <h5>Productos / Servicios</h5>
            <div class="row">
                <table id="tblProdServ" class="table">
                    <thead>
                        <tr>
                            <th> Cantidad </th>
                            <th> Descripción </th>
                            <th> Producto / Servicio </th>
                            <th> Unidad de medida </th>
                            <th> Precio unitario </th>
                            <th> Nombre del impuesto </th>
                            <th> Porcentaje del impuesto </th>
                            <th> Importe del impuesto </th>
                            <th> Total </th>
                            <th> ClaveProductoDB </th>
                            <th> ClaveUnidadDB </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Conceptos)
                        {
                            <tr>
                                <td> @item.Cantidad  </td>
                                <td> @item.Descripcion </td>
                                <td> @item.ClaveProducto </td>
                                <td> @item.ClaveUnidad </td>
                                <td> @item.PrecioUnitario </td>
                                <td> @item.Impuestos[0].Nombre  </td>
                                <td> @item.Impuestos[0].Tasa</td>
                                <td> @item.Impuestos[0].Importe  </td>
                                <td> @(item.PrecioUnitario + @item.Impuestos[0].Importe)</td>
                                <td> @item.ClaveProductoDB </td>
                                <td> @item.ClaveUnidadDB </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <br />
            <hr />
            <div style="text-align:right ">
                <a id="regresar" href="@Url.Action("Index", "AdminFactura")" class="btn btn-danger"><i class="icon-prev"></i>Regresar</a>
                <input type="submit" class="btn btn-success" value="Generar factura" />
            </div>
        </form>
    </div>

    <script>
        var message = '@message';
        var typemessage = '@typemessage';
    </script>
}
@section script{
    <script type="text/javascript" src="@Url.Content("~/Content/js/plugins/datatables/jquery.dataTables.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/mensajeDeError.js")"></script>
    <script>
        jQuery(document).ready(function () {
            Mensaje(message, typemessage);

            var tblProdServ = $("#tblProdServ").DataTable({
           "language": {
               "url": "@Url.Content("~/Content/assets/json/Spanish.json")"
           },
           "columnDefs": [
               {
                   "targets": [0],
                   render: function (data, type, row) {
                       var value = row[0].replace(',', '.');
                       return value;
                   }
               },
               {
                   "targets": [4],
                   render: function (data, type, row) {
                       var value = '$ ' + row[4].replace(',', '.');
                       return value;
                   }
               },
               {
                   "targets": [6],
                   render: function (data, type, row) {
                       var value = row[6].replace(',', '.');
                       return value;
                   }
               },
               {
                   "targets": [7],
                   render: function (data, type, row) {
                       var value = '$ ' + row[7].replace(',', '.') ;
                        return value;
                   }
               },
               {
                   "targets": [8],
                   render: $.fn.dataTable.render.number(',', '.', 2, '$')

               },
               {
                   "targets": [9],
                   "visible": false,
                   "searchable": false
               },
               {
                   "targets": [10],
                   "visible": false,
                   "searchable": false
               }
           ]


       });

    });
    </script>
}
